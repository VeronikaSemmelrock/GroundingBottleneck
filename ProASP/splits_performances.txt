----------------
Rule types: 
-> CS - constraints, that is rules with an empty head not
containing aggregates
-> AG - rules containing aggregates
-> RL - all the other normal rules


----------------------------------
Time taken for solving 200 things with the 7 different ways of splitting the HCP encoding by rule type: 
-> CS
    real    3.48s
    user    3.45s
    sys     0.02s
    cpu     99%
	
-> AG 
    real    27.65s
    user    26.96s
    sys     0.68s
    cpu     99%

-> RL 
    real    25.27s
    user    24.51s
    sys     0.75s
    cpu     99%

	
-> RL+CS
    real    74.42s
    user    74.33s
    sys     0.07s
    cpu     99%

	
-> RL+AG 
    real    66.42s
    user    65.70s
    sys     0.69s
    cpu     99%

	
-> CS+AG 
    real    63.57s
    user    63.53s
    sys     0.02s
    cpu     99%

	
-> RL+AG+CS
    real    117.05s
    user    116.93s
    sys     0.06s
    cpu     99%

-------------

------------- ANALYSIS OF INCREMENTAL STEP IN INCREMENTAL-PROASP -------------
The following are the results of solving the step from 500 things configured, to adding 50 new things and configuring them (simulating a step in incremental-ProASP).
The following are time and peak RAM values of each encoding split:

BENCHMARKS for solving 550 things, when 500 things are already configured as facts: 
-> CS
    System time (s) 0.02
    Maximum resident set size (kBytes): 127792
    
	
-> AG 
    System time (s) 1.43
    Maximum resident set size (kBytes): 7237800
    

-> RL 
    System time (s) 31.13
    Maximum resident set size (kBytes): 14643776
 
	
-> RL+CS
    System time (s) 0.14
    Maximum resident set size (kBytes): 454308


	
-> RL+AG 
    System time (s) 24.73
    Maximum resident set size (kBytes): 14822148


	
-> CS+AG 
    System time (s) 0.03
    Maximum resident set size (kBytes): 139564


	
-> RL+AG+CS
    System time (s) 0.11
    Maximum resident set size (kBytes): 473996


###### -> CS split is most efficient with lowest memory consumption 
